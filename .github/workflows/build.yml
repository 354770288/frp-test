name: Build and Release

on:
  push:
    tags:
      - 'v*'
    branches:
      - main
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'

    - name: Get dependencies
      run: go mod tidy

    - name: Build for all platforms
      run: |
        mkdir -p dist
        
        # Define platforms
        platforms=(
          "windows/amd64/.exe"
          "windows/386/.exe"
          "windows/arm64/.exe"
          "darwin/amd64/"
          "darwin/arm64/"
          "linux/amd64/"
          "linux/386/"
          "linux/arm64/"
          "linux/arm/"
        )
        
        for platform in "${platforms[@]}"
        do
          GOOS=$(echo $platform | cut -d'/' -f1)
          GOARCH=$(echo $platform | cut -d'/' -f2)
          EXT=$(echo $platform | cut -d'/' -f3)
          
          OUTPUT_NAME="frp-tester-${GOOS}-${GOARCH}${EXT}"
          echo "Building $OUTPUT_NAME..."
          
          env GOOS=$GOOS GOARCH=$GOARCH CGO_ENABLED=0 go build \
            -ldflags="-s -w" \
            -o dist/$OUTPUT_NAME \
            main.go
        done
        
        ls -la dist/

    - name: Upload all artifacts
      uses: actions/upload-artifact@v4
      with:
        name: all-binaries
        path: dist/*
        retention-days: 30

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    
    steps:
    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        name: all-binaries
        path: dist

    - name: List files
      run: ls -la dist/

    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
